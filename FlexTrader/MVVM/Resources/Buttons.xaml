<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:FlexTrader.MVVM.Resources">

    <local:BrushToEffectConverter x:Key="BrushToEffectConverter" />
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.Blue.IsActive.Background" Color="#FF284568" />
    <SolidColorBrush x:Key="Button.Blue.IsActive.BorderBrush" Color="#FF8EC0FD" />
    <SolidColorBrush x:Key="Button.Blue.Static.Background" Color="#FF284568" />
    <SolidColorBrush x:Key="Button.Blue.Static.BorderBrush" Color="#FF284568" />
    <SolidColorBrush x:Key="Button.Blue.MouseOver.Background" Color="#FF426DA2" />
    <SolidColorBrush x:Key="Button.Blue.MouseOver.BorderBrush" Color="#FF569BEE" />
    <SolidColorBrush x:Key="Button.Blue.Pressed.Background" Color="#FF68AADC" />
    <SolidColorBrush x:Key="Button.Blue.Pressed.BorderBrush" Color="#FF68AADC" />
    <SolidColorBrush x:Key="Button.Blue.Disabled.Background" Color="#FF17293E" />
    <SolidColorBrush x:Key="Button.Blue.Disabled.BorderBrush" Color="Black" />

    <SolidColorBrush x:Key="Button.Red.IsActive.Background" Color="#FF682828" />
    <SolidColorBrush x:Key="Button.Red.IsActive.BorderBrush" Color="#FFFD8E8E" />
    <SolidColorBrush x:Key="Button.Red.Static.Background" Color="#FF682828" />
    <SolidColorBrush x:Key="Button.Red.Static.BorderBrush" Color="#FF682828" />
    <SolidColorBrush x:Key="Button.Red.MouseOver.Background" Color="#FFA24242" />
    <SolidColorBrush x:Key="Button.Red.MouseOver.BorderBrush" Color="#FFEE5656" />
    <SolidColorBrush x:Key="Button.Red.Pressed.Background" Color="#FFDC6868" />
    <SolidColorBrush x:Key="Button.Red.Pressed.BorderBrush" Color="#FFDC6868" />
    <SolidColorBrush x:Key="Button.Red.Disabled.Background" Color="#FF3E1717" />
    <SolidColorBrush x:Key="Button.Red.Disabled.BorderBrush" Color="Black" />
    <Style TargetType="{x:Type local:PaletteButtonLeft}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0,2.5,0,2.5" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.Static.BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource Button.Blue.Static.Background}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PaletteButtonLeft}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="10"
                        Effect="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BrushToEffectConverter}, ConverterParameter=10}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Blue  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.Static.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.Static.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.IsActive.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.IsActive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.MouseOver.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.MouseOver.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.Pressed.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.Pressed.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.Disabled.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.Disabled.Background}" />
                        </MultiTrigger>
                        <!--  Red  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.Static.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.Static.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.IsActive.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.IsActive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.MouseOver.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.MouseOver.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.Pressed.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.Pressed.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.Disabled.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.Disabled.Background}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PaletteButtonTop}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="2.5,0,2.5,0" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.Static.BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource Button.Blue.Static.Background}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PaletteButtonTop}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="10"
                        Effect="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BrushToEffectConverter}, ConverterParameter=10}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Blue  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.Static.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.Static.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.IsActive.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.IsActive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.MouseOver.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.MouseOver.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.Pressed.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.Pressed.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Blue.Disabled.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Blue.Disabled.Background}" />
                        </MultiTrigger>
                        <!--  Red  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.Static.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.Static.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.IsActive.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.IsActive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.MouseOver.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.MouseOver.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.Pressed.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.Pressed.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Red.Disabled.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Red.Disabled.Background}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ContextMenuButton.MouseOver.Background" Color="#FF404040" />
    <SolidColorBrush x:Key="ContextMenuButton.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="ContextMenuButton.Disabled.Foreground" Color="#FF838383" />
    <Style x:Key="ContextMenuButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="20,3,5,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ContextMenuButton.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ContextMenuButton.Disabled.Background}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ContextMenuButton.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>