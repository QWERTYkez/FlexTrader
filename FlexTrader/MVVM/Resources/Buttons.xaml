<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:FlexTrader.MVVM.Resources">

    <local:BrushToEffectConverter x:Key="BrushToEffectConverter" />
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.IsActive.Background" Color="#FF284568" />
    <SolidColorBrush x:Key="Button.IsActive.BorderBrush" Color="#FF8EC0FD" />
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FF284568" />
    <SolidColorBrush x:Key="Button.Static.BorderBrush" Color="#FF284568" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF426DA2" />
    <SolidColorBrush x:Key="Button.MouseOver.BorderBrush" Color="#FF569BEE" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF68AADC" />
    <SolidColorBrush x:Key="Button.Pressed.BorderBrush" Color="#FF68AADC" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF17293E" />
    <SolidColorBrush x:Key="Button.Disabled.BorderBrush" Color="Black" />
    <Style TargetType="{x:Type local:PaletteButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0,2.5,0,2.5" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PaletteButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="10"
                        Effect="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BrushToEffectConverter}, ConverterParameter=10}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Button.IsActive.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.IsActive.Background}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Pressed.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Disabled.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>