<!--
    Copyright ©  2020  Andrej Melekhin <QWERTYkez@outlook.com>.

    This file is part of FlexTrader
    FlexTrader is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    FlexTrader is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FlexTrader. If not, see <http://www.gnu.org/licenses/>.
!-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Converters="clr-namespace:FlexUserConrols.Converters"
    xmlns:local="clr-namespace:FlexUserConrols.Buttons">

    <Converters:BrushToEffectConverter x:Key="BrushToEffectConverter" />
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="PaletteButton.Blue.IsActive.Background" Color="#FF284568" />
    <SolidColorBrush x:Key="PaletteButton.Blue.IsActive.BorderBrush" Color="#FF8EC0FD" />
    <SolidColorBrush x:Key="PaletteButton.Blue.Static.Background" Color="#FF284568" />
    <SolidColorBrush x:Key="PaletteButton.Blue.Static.BorderBrush" Color="#FF284568" />
    <SolidColorBrush x:Key="PaletteButton.Blue.MouseOver.Background" Color="#FF426DA2" />
    <SolidColorBrush x:Key="PaletteButton.Blue.MouseOver.BorderBrush" Color="#FF569BEE" />
    <SolidColorBrush x:Key="PaletteButton.Blue.Pressed.Background" Color="#FF68AADC" />
    <SolidColorBrush x:Key="PaletteButton.Blue.Pressed.BorderBrush" Color="#FF68AADC" />
    <SolidColorBrush x:Key="PaletteButton.Blue.Disabled.Background" Color="#FF17293E" />
    <SolidColorBrush x:Key="PaletteButton.Blue.Disabled.BorderBrush" Color="Black" />

    <SolidColorBrush x:Key="PaletteButton.Red.IsActive.Background" Color="#FF682828" />
    <SolidColorBrush x:Key="PaletteButton.Red.IsActive.BorderBrush" Color="#FFFD8E8E" />
    <SolidColorBrush x:Key="PaletteButton.Red.Static.Background" Color="#FF682828" />
    <SolidColorBrush x:Key="PaletteButton.Red.Static.BorderBrush" Color="#FF682828" />
    <SolidColorBrush x:Key="PaletteButton.Red.MouseOver.Background" Color="#FFA24242" />
    <SolidColorBrush x:Key="PaletteButton.Red.MouseOver.BorderBrush" Color="#FFEE5656" />
    <SolidColorBrush x:Key="PaletteButton.Red.Pressed.Background" Color="#FFDC6868" />
    <SolidColorBrush x:Key="PaletteButton.Red.Pressed.BorderBrush" Color="#FFDC6868" />
    <SolidColorBrush x:Key="PaletteButton.Red.Disabled.Background" Color="#FF3E1717" />
    <SolidColorBrush x:Key="PaletteButton.Red.Disabled.BorderBrush" Color="Black" />
    <Style TargetType="{x:Type local:PaletteButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Blue.Static.BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource PaletteButton.Blue.Static.Background}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PaletteButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="10"
                        Effect="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BrushToEffectConverter}, ConverterParameter=10}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Type  -->
                        <Trigger Property="Type" Value="Vertical">
                            <Setter Property="Margin" Value="0,2.5,0,2.5" />
                        </Trigger>
                        <Trigger Property="Type" Value="Horizontal">
                            <Setter Property="Margin" Value="2.5,0,2.5,0" />
                        </Trigger>

                        <!--  Blue  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Blue.Static.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Blue.Static.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Blue.IsActive.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Blue.IsActive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Blue.MouseOver.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Blue.MouseOver.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Blue.Pressed.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Blue.Pressed.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="Color" Value="Blue" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Blue.Disabled.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Blue.Disabled.Background}" />
                        </MultiTrigger>

                        <!--  Red  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="False" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Red.Static.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Red.Static.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Red.IsActive.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Red.IsActive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Red.MouseOver.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Red.MouseOver.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Red.Pressed.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Red.Pressed.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false" />
                                <Condition Property="Color" Value="Red" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource PaletteButton.Red.Disabled.BorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource PaletteButton.Red.Disabled.Background}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>